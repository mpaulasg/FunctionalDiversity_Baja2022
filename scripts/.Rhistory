#load packages
#library(remotes)
#remotes::install_github("CmlMagneville/mFD")
library(here)
library(mFD)
library(ggplot2)
# load traits data - Kelp and rocky reefs:
traits <- read.csv("data/Baja_traits_fish.csv")
# load traits data - Kelp and rocky reefs:
traits <- read.csv(here::here("data", "Baja_traits_fish.csv"))
View(traits)
traits$Diet <- as.factor(traits$Diet)
traits$Habitat <-factor(traits[,"Habitat"], levels=c("Bottom", "Slightly-bottom","In fronds", "Pelagic",
"Roving" ), ordered = TRUE )
traits$Gregariousness <- factor(traits[, "Gregariousness"],
levels = c("Solitary", "In pairs or sometimes aggregating","Forming schools"),
ordered = TRUE)
rm(list=ls()) # cleaning memory
#load packages
#library(remotes)
#remotes::install_github("CmlMagneville/mFD")
library(here)
library(mFD)
library(ggplot2)
#size as numeric
traits$maximum_length <- as.numeric(traits$maximum_length)
traits <- read.csv(here::here("data", "Baja_traits_fish.csv"))
#size as numeric
traits$maximum_length <- as.numeric(traits$maximum_length)
traits$diet <- as.factor(traits$diet)
# traits$Habitat <-factor(traits[,"Habitat"], levels=c("Bottom", "Slightly-bottom","In fronds", "Pelagic",
# "Roving" ), ordered = TRUE )
traits$habitat <-factor(traits[,"habitat"], levels=c("B", "S-B","FRO", "PEL",
"ROV" ), ordered = TRUE )
traits$gregariousness <- factor(traits[, "gregariousness"],
#levels = c("Solitary", "In pairs or sometimes aggregating","Forming schools"),
levels = c("SOL", "PAIR","SCHO"),
ordered = TRUE)
traits$morphology <- factor(traits[,"morphology"],
levels=c("COMH", "COML", "EEL", "RAY"), ordered = TRUE )
View(traits)
rownames(traits) <- traits$species_id
traits <- tibble::column_to_rownames(traits, var = "Species")
traits <- tibble::column_to_rownames(traits, var = "species")
fish <- read.csv(here::here("data", "fish_kelp&rocky_reef.csv"))
fish$hab <- rep(c("Kelp", "Reef"), each=36)
fish_habitat <- as.data.frame(matrix(ncol = ncol(fish), nrow = 2))
colnames(fish_habitat) <- colnames(fish)
fish_habitat$site_id <- c("Kelp", "Reef")
rownames(fish_habitat) <- fish_habitat$site_id
# fill this new df:
for (c in colnames(fish[, - c(1, ncol(fish))])) {
hab_kelp <- mean(fish[which(fish$hab == "Kelp"), c])
fish_habitat["Kelp", c] <- hab_kelp
hab_rocky <- mean(fish[which(fish$hab == "Reef"), c])
fish_habitat["Reef", c] <- hab_rocky
}
fish_habitat <- fish_habitat[, - c(1,42,43, ncol(fish_habitat))]
# load trait types data:
traits_type <- read.csv("data/traits_type.csv")
# load trait types data:
traits_type <- read.csv(here::here("data", "traits_type.csv"))
fish_traits_summ <- mFD::sp.tr.summary(tr_cat = traits_type,
sp_tr  = traits)
fish_traits_summ$tr_summary_list
fish_habitat <- as.matrix(fish_habitat)
fish_traits_summ <- mFD::asb.sp.summary(asb_sp_w = fish_habitat)
# retrieve occurrence matrix:
occ_matrix <- fish_traits_summ$asb_sp_occ
# total biomass of each species:
fish_traits_summ$sp_tot_w
# compute functional distance based on traits:
sp_dist <- mFD::funct.dist(
sp_tr  = traits,
tr_cat = traits_type,
metric = "gower",
scale_euclid  = "scale_center",
ordinal_var = "classic",
weight_type = "equal",
stop_if_NA  = TRUE)
# is there a lot of distances = 0? (group into FEs or not?)
sp_dist2 <- as.matrix(sp_dist)
inds <- which(sp_dist2 == min(sp_dist2), arr.ind=TRUE)
inds
sp_dist
# compute the quality of functional spaces:
fspaces_quality <- mFD::quality.fspaces(
sp_dist             = sp_dist,
maxdim_pcoa         = 10,
deviation_weighting = "absolute",
fdist_scaling       = FALSE,
fdendro             = "average")
# retrieve table of quality metric:
fspaces_quality$quality_fspaces
fs_qual <- mFD::quality.fspaces.plot(
fspaces_quality            = fspaces_quality,
quality_metric             = "mad",
fspaces_plot               = c("tree_average", "pcoa_2d", "pcoa_3d", "pcoa_4d"),
name_file                  = NULL,
range_dist                 = NULL,
range_dev                  = NULL,
range_qdev                 = NULL,
gradient_deviation         = c(neg = "darkblue", nul = "grey80", pos = "darkred"),
gradient_deviation_quality = c(low = "yellow", high = "red"),
x_lab                      = "Trait-based distance")
fs_qual
ggsave(plot = fs_qual, file  = here::here("figures", "figure1_SM.png"),
height = 12, width = 25, unit = "cm")
# retrieve coordinates of species:
sp_faxes_coord <- fspaces_quality$"details_fspaces"$"sp_pc_coord"
# test correlation between traits and axes:
cor_tr_faxes <- mFD::traits.faxes.cor(
sp_tr          = traits,
sp_faxes_coord = sp_faxes_coord[, c("PC1", "PC2", "PC3", "PC4")],
plot           = TRUE)
# get the table of correlation:
cor_tr_faxes$tr_faxes_stat
# get the plot:
traits_axes <- cor_tr_faxes$tr_faxes_plot
traits_axes   # Will need to change the labels
ggsave(plot = traits_axes, filename  = here::here("figures", "figure2_SM.png"),
height = 12, width = 25, unit = "cm")
background <- background.plot(range_faxes = c(-1,2),
faxes_nm = c("PC1", "PC2", "PC3"),
color_bg = "grey95")
View(background)
# retrieve coordinates of species:
sp_faxes_coord <- fspaces_quality$details_fspaces$sp_pc_coord
View(fish_habitat)
sp_filter <- mFD::sp.filter(asb_nm          = c("Kelp", "Reef"),
sp_faxes_coord = sp_faxes_coord,
asb_sp_w       = fish_habitat)
View(sp_faxes_coord)
sp_filter <- mFD::sp.filter(asb_nm          = c("Kelp"),
sp_faxes_coord = sp_faxes_coord,
asb_sp_w       = fish_habitat)
sp_filter <- mFD::sp.filter(asb_nm          = c("Kelp", "Reef"),
sp_faxes_coord = sp_faxes_coord,
asb_sp_w       = fish_habitat)
### Compute indices:
alpha_fd_indices <- mFD::alpha.fd.multidim(
sp_faxes_coord   = sp_faxes_coord[, c("PC1", "PC2", "PC3", "PC4")],
asb_sp_w         = fish_habitat,
ind_vect         = c("fric", "feve", "fdiv"),
scaling          = TRUE,
check_input      = TRUE,
details_returned = TRUE)
fd_values <- alpha_fd_indices$functional_diversity_indices
# Load Species*Traits dataframe:
data("fruits_traits", package = "mFD")
# Load Assemblages*Species dataframe:
data("baskets_fruits_weights", package = "mFD")
# Load Traits categories dataframe:
data("fruits_traits_cat", package = "mFD")
# Compute functional distance
sp_dist_fruits <- mFD::funct.dist(sp_tr         = fruits_traits,
tr_cat        = fruits_traits_cat,
metric        = "gower",
scale_euclid  = "scale_center",
ordinal_var   = "classic",
weight_type   = "equal",
stop_if_NA    = TRUE)
# Compute functional spaces quality to retrieve species coordinates matrix:
fspaces_quality_fruits <- mFD::quality.fspaces(sp_dist = sp_dist_fruits,
maxdim_pcoa         = 10,
deviation_weighting = "absolute",
fdist_scaling       = FALSE,
fdendro             = "average")
# Retrieve species coordinates matrix:
sp_faxes_coord_fruits <- fspaces_quality_fruits$details_fspaces$sp_pc_coord
# Compute alpha diversity indices:
alpha_fd_indices_fruits <- mFD::alpha.fd.multidim(
sp_faxes_coord   = sp_faxes_coord_fruits[, c("PC1", "PC2", "PC3", "PC4")],
asb_sp_w         = baskets_fruits_weights,
ind_vect         = c("fdis", "fmpd", "fnnd", "feve", "fric", "fdiv",
"fori", "fspe"),
scaling          = TRUE,
check_input      = TRUE,
details_returned = TRUE)
# Plot all fd alpha indices:
plots_alpha <- mFD::alpha.multidim.plot(
output_alpha_fd_multidim = alpha_fd_indices_fruits,
plot_asb_nm              = c("basket_1", "basket_5"),
ind_nm                   = c("fdis", "fide", "fnnd", "feve",
"fric", "fdiv", "fori",
"fspe"),
faxes                    = NULL,
faxes_nm                 = NULL,
range_faxes              = c(NA, NA),
color_bg                 = "grey95",
shape_sp                 = c(pool = 3, asb1 = 21,
asb2 = 21),
size_sp                  = c(pool = 0.7, asb1 = 1,
asb2 = 1),
color_sp                 = c(pool = "grey50",
asb1 = "#1F968BFF",
asb2 = "#DCE319FF"),
color_vert               = c(pool = "grey50",
asb1 = "#1F968BFF",
asb2 = "#DCE319FF"),
fill_sp                 = c(pool =  NA,
asb1 = "#1F968BFF",
asb2 = "#DCE319FF"),
fill_vert               = c(pool = NA,
asb1 = "#1F968BFF",
asb2 = "#DCE319FF"),
color_ch                = c(pool = NA,
asb1 = "#1F968BFF",
asb2 = "#DCE319FF"),
fill_ch                 = c(pool = "white",
asb1 = "#1F968BFF",
asb2 = "#DCE319FF"),
alpha_ch                = c(pool = 1, asb1 = 0.3,
asb2 = 0.3),
shape_centroid_fdis     = c(asb1 = 22,  asb2 = 24),
shape_centroid_fdiv     = c(asb1 = 22,  asb2 = 24),
shape_centroid_fspe     = 23,
color_centroid_fspe     = "black",
size_sp_nm              = 3,
color_sp_nm             = "black",
plot_sp_nm              = NULL,
fontface_sp_nm          = "plain",
save_file               = FALSE,
check_input             = TRUE)
# Check FRic plot:
plots_alpha$fric$patchwork
plots_alpha <- mFD::alpha.multidim.plot(
output_alpha_fd_multidim = alpha_fd_indices,
plot_asb_nm              = c("Kelp", "Reef"),
ind_nm                   = c("fric"),
faxes                    = paste0("PC", 1:3),
faxes_nm                 = NULL,
range_faxes              = c(NA, NA),
color_bg                 = "grey95",
shape_sp                 = c(pool = 3, asb1 = 21, asb2 = 21),
size_sp                  = c(pool = 0.7, asb1 = 1, asb2 = 1),
color_sp                 = c(pool = "grey50", asb1 = "mediumseagreen", asb2 = "sienna"),
color_vert               = c(pool = "grey50", asb1 = "mediumseagreen", asb2 = "sienna"),
fill_sp                  = c(pool = NA, asb1 = "mediumseagreen", asb2 = "sienna"),
fill_vert                = c(pool = NA, asb1 = "mediumseagreen", asb2 = "sienna"),
color_ch                 = c(pool = NA, asb1 = "mediumseagreen", asb2 = "sienna"),
fill_ch                  = c(pool = "white", asb1 = "mediumseagreen", asb2 = "sienna"),
alpha_ch                 = c(pool = 1, asb1 = 0.3, asb2 = 0.3),
shape_centroid_fdis      = c(asb1 = 22,  asb2 = 24),
shape_centroid_fdiv      = c(asb1 = 22,  asb2 = 24),
shape_centroid_fspe      = 23,
color_centroid_fspe      = "black",
size_sp_nm               = 3,
#color_sp_nm              = "black",
plot_sp_nm               = NULL,
#fontface_sp_nm           = "plain",
save_file                = FALSE,
check_input              = TRUE)
plot_fric <- plots_alpha$"fric"$"patchwork"
plot_fric
plots_alpha <- mFD::alpha.multidim.plot(
output_alpha_fd_multidim = alpha_fd_indices,
plot_asb_nm              = c("Kelp", "Reef"),
ind_nm                   = c("fric"),
faxes                    = paste0("PC", 1:4),
faxes_nm                 = NULL,
range_faxes              = c(NA, NA),
color_bg                 = "grey95",
shape_sp                 = c(pool = 3, asb1 = 21, asb2 = 21),
size_sp                  = c(pool = 0.7, asb1 = 1, asb2 = 1),
color_sp                 = c(pool = "grey50", asb1 = "mediumseagreen", asb2 = "sienna"),
color_vert               = c(pool = "grey50", asb1 = "mediumseagreen", asb2 = "sienna"),
fill_sp                  = c(pool = NA, asb1 = "mediumseagreen", asb2 = "sienna"),
fill_vert                = c(pool = NA, asb1 = "mediumseagreen", asb2 = "sienna"),
color_ch                 = c(pool = NA, asb1 = "mediumseagreen", asb2 = "sienna"),
fill_ch                  = c(pool = "white", asb1 = "mediumseagreen", asb2 = "sienna"),
alpha_ch                 = c(pool = 1, asb1 = 0.3, asb2 = 0.3),
shape_centroid_fdis      = c(asb1 = 22,  asb2 = 24),
shape_centroid_fdiv      = c(asb1 = 22,  asb2 = 24),
shape_centroid_fspe      = 23,
color_centroid_fspe      = "black",
size_sp_nm               = 3,
#color_sp_nm              = "black",
plot_sp_nm               = NULL,
#fontface_sp_nm           = "plain",
save_file                = FALSE,
check_input              = TRUE)
plot_fric <- plots_alpha$"fric"$"patchwork"
plot_fric
plots_alpha <- mFD::alpha.multidim.plot(
output_alpha_fd_multidim = alpha_fd_indices,
plot_asb_nm              = c("Kelp", "Reef"),
ind_nm                   = c("fric"),
faxes                    = paste0("PC", 1:3),
faxes_nm                 = NULL,
range_faxes              = c(NA, NA),
color_bg                 = "grey95",
shape_sp                 = c(pool = 3, asb1 = 21, asb2 = 21),
size_sp                  = c(pool = 0.7, asb1 = 1, asb2 = 1),
color_sp                 = c(pool = "grey50", asb1 = "mediumseagreen", asb2 = "sienna"),
color_vert               = c(pool = "grey50", asb1 = "mediumseagreen", asb2 = "sienna"),
fill_sp                  = c(pool = NA, asb1 = "mediumseagreen", asb2 = "sienna"),
fill_vert                = c(pool = NA, asb1 = "mediumseagreen", asb2 = "sienna"),
color_ch                 = c(pool = NA, asb1 = "mediumseagreen", asb2 = "sienna"),
fill_ch                  = c(pool = "white", asb1 = "mediumseagreen", asb2 = "sienna"),
alpha_ch                 = c(pool = 1, asb1 = 0.3, asb2 = 0.3),
shape_centroid_fdis      = c(asb1 = 22,  asb2 = 24),
shape_centroid_fdiv      = c(asb1 = 22,  asb2 = 24),
shape_centroid_fspe      = 23,
color_centroid_fspe      = "black",
size_sp_nm               = 3,
#color_sp_nm              = "black",
plot_sp_nm               = NULL,
#fontface_sp_nm           = "plain",
save_file                = FALSE,
check_input              = TRUE)
plot_fric <- plots_alpha$"fric"$"patchwork"
plot_fric
### Compute indices:
alpha_fd_indices <- mFD::alpha.fd.multidim(
sp_faxes_coord   = sp_faxes_coord[, c("PC1", "PC2", "PC3", "PC4")],
asb_sp_w         = fish_habitat,
ind_vect         = c("fric", "feve", "fdiv"),
scaling          = TRUE,
check_input      = TRUE,
details_returned = TRUE)
fd_values <- alpha_fd_indices$functional_diversity_indices
plots_alpha <- mFD::alpha.multidim.plot(
output_alpha_fd_multidim = alpha_fd_indices,
plot_asb_nm              = c("Kelp", "Reef"),
ind_nm                   = c("fric"),
faxes                    = paste0("PC", 1:3),
faxes_nm                 = NULL,
range_faxes              = c(NA, NA),
color_bg                 = "grey95",
shape_sp                 = c(pool = 3, asb1 = 21, asb2 = 21),
size_sp                  = c(pool = 0.7, asb1 = 1, asb2 = 1),
color_sp                 = c(pool = "grey50", asb1 = "mediumseagreen", asb2 = "sienna"),
color_vert               = c(pool = "grey50", asb1 = "mediumseagreen", asb2 = "sienna"),
fill_sp                  = c(pool = NA, asb1 = "mediumseagreen", asb2 = "sienna"),
fill_vert                = c(pool = NA, asb1 = "mediumseagreen", asb2 = "sienna"),
color_ch                 = c(pool = NA, asb1 = "mediumseagreen", asb2 = "sienna"),
fill_ch                  = c(pool = "white", asb1 = "mediumseagreen", asb2 = "sienna"),
alpha_ch                 = c(pool = 1, asb1 = 0.3, asb2 = 0.3),
shape_centroid_fdis      = c(asb1 = 22,  asb2 = 24),
shape_centroid_fdiv      = c(asb1 = 22,  asb2 = 24),
shape_centroid_fspe      = 23,
color_centroid_fspe      = "black",
size_sp_nm               = 3,
#color_sp_nm              = "black",
plot_sp_nm               = NULL,
#fontface_sp_nm           = "plain",
save_file                = FALSE,
check_input              = TRUE)
plot_fric <- plots_alpha$"fric"$"patchwork"
plot_fric
rm(list=ls()) # cleaning memory
#library(remotes)
#remotes::install_github("CmlMagneville/mFD")
library(mFD)
library(ggplot2)
traits_kelp <- read.csv(here::here("data", "kelp_traits.csv"))
rm(list=ls()) # cleaning memory
library(here)
library(mFD)
library(ggplot2)
traits <- read.csv(here::here("data", "Baja_traits_fish.csv"))
#size as numeric
traits$maximum_length <- as.numeric(traits$maximum_length)
traits$diet <- as.factor(traits$diet)
# traits$Habitat <-factor(traits[,"Habitat"], levels=c("Bottom", "Slightly-bottom","In fronds", "Pelagic",
# "Roving" ), ordered = TRUE )
traits$habitat <-factor(traits[,"habitat"], levels=c("B", "S-B","FRO", "PEL",
"ROV" ), ordered = TRUE )
traits$gregariousness <- factor(traits[, "gregariousness"],
#levels = c("Solitary", "In pairs or sometimes aggregating","Forming schools"),
levels = c("SOL", "PAIR","SCHO"),
ordered = TRUE)
traits$morphology <- factor(traits[,"morphology"],
levels=c("COMH", "COML", "EEL", "RAY"), ordered = TRUE )
rownames(traits) <- traits$species_id
traits <- tibble::column_to_rownames(traits, var = "species")
fish <- read.csv(here::here("data", "fish_kelp&rocky_reef.csv"))
fish$hab <- rep(c("Kelp", "Reef"), each=36)
fish_habitat <- as.data.frame(matrix(ncol = ncol(fish), nrow = 2))
colnames(fish_habitat) <- colnames(fish)
fish_habitat$site_id <- c("Kelp", "Reef")
rownames(fish_habitat) <- fish_habitat$site_id
# fill this new df:
for (c in colnames(fish[, - c(1, ncol(fish))])) {
hab_kelp <- mean(fish[which(fish$hab == "Kelp"), c])
fish_habitat["Kelp", c] <- hab_kelp
hab_rocky <- mean(fish[which(fish$hab == "Reef"), c])
fish_habitat["Reef", c] <- hab_rocky
}
fish_habitat <- fish_habitat[, - c(1,42,43, ncol(fish_habitat))]
# load trait types data:
traits_type <- read.csv(here::here("data", "traits_type.csv"))
fish_traits_summ <- mFD::sp.tr.summary(tr_cat = traits_type,
sp_tr  = traits)
fish_traits_summ$tr_summary_list
fish_habitat <- as.matrix(fish_habitat)
fish_traits_summ <- mFD::asb.sp.summary(asb_sp_w = fish_habitat)
# retrieve occurrence matrix:
occ_matrix <- fish_traits_summ$asb_sp_occ
# compute functional distance based on traits:
sp_dist <- mFD::funct.dist(
sp_tr  = traits,
tr_cat = traits_type,
metric = "gower",
scale_euclid  = "scale_center",
ordinal_var = "classic",
weight_type = "equal",
stop_if_NA  = TRUE)
# is there a lot of distances = 0? (group into FEs or not?)
sp_dist2 <- as.matrix(sp_dist)
inds <- which(sp_dist2 == min(sp_dist2), arr.ind=TRUE)
inds
sp_dist
# compute the quality of functional spaces:
fspaces_quality <- mFD::quality.fspaces(
sp_dist             = sp_dist,
maxdim_pcoa         = 10,
deviation_weighting = "absolute",
fdist_scaling       = FALSE,
fdendro             = "average")
# retrieve table of quality metric:
fspaces_quality$quality_fspaces
fs_qual <- mFD::quality.fspaces.plot(
fspaces_quality            = fspaces_quality,
quality_metric             = "mad",
fspaces_plot               = c("tree_average", "pcoa_2d", "pcoa_3d", "pcoa_4d"),
name_file                  = NULL,
range_dist                 = NULL,
range_dev                  = NULL,
range_qdev                 = NULL,
gradient_deviation         = c(neg = "darkblue", nul = "grey80", pos = "darkred"),
gradient_deviation_quality = c(low = "yellow", high = "red"),
x_lab                      = "Trait-based distance")
fs_qual
View(fish_habitat)
